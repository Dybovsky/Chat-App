{"ast":null,"code":"var _jsxFileName = \"/home/tom/Documents/ITC/01My_course/projects/react-project-2-Dybovsky/src/App.js\";\nimport React from \"react\";\nimport NewTweet from \"./components/NewTweet\";\nimport TweetsList from \"./components/TweetsList\";\nimport { callTweetList } from \"./lib/api\";\nimport Loading from \"./components/Loading\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport Profile from \"./components/Profile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [],\n      isLoading: false,\n      newName: \"\"\n    };\n  }\n\n  onNewTweet(tweet) {\n    this.setState(prevState => {\n      return {\n        tweets: [tweet, ...prevState.tweets]\n      };\n    });\n  }\n\n  onChangeName(name) {\n    // this.setState({ newName: name });\n    console.log(name);\n  }\n\n  async loadTweets() {\n    this.setState({\n      isLoading: true\n    });\n    const tweets = await callTweetList();\n    this.setState({\n      tweets,\n      isLoading: false\n    });\n  }\n\n  componentDidMount() {\n    this.loadTweets();\n    setInterval(() => {\n      this.loadTweets();\n    }, 10000);\n  }\n\n  render() {\n    const {\n      tweets,\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: [/*#__PURE__*/_jsxDEV(NewTweet, {\n              onNewTweet: tweet => {\n                this.onNewTweet(tweet);\n              },\n              isLoading: this.state.isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 28\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"helper\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(TweetsList, {\n              tweets: tweets\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/profile\",\n            children: [/*#__PURE__*/_jsxDEV(Profile, {\n              onChangeName: this.onChangeName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), console.log(this.state)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/tom/Documents/ITC/01My_course/projects/react-project-2-Dybovsky/src/App.js"],"names":["React","NewTweet","TweetsList","callTweetList","Loading","BrowserRouter","Router","Switch","Route","NavBar","Profile","App","Component","constructor","props","state","tweets","isLoading","newName","onNewTweet","tweet","setState","prevState","onChangeName","name","console","log","loadTweets","componentDidMount","setInterval","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,GAAN,SAAkBX,KAAK,CAACY,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,SAAS,EAAE,KAFA;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKD;;AAEDC,EAAAA,UAAU,CAACC,KAAD,EAAQ;AAChB,SAAKC,QAAL,CAAeC,SAAD,IAAe;AAC3B,aAAO;AAAEN,QAAAA,MAAM,EAAE,CAACI,KAAD,EAAQ,GAAGE,SAAS,CAACN,MAArB;AAAV,OAAP;AACD,KAFD;AAGD;;AAEDO,EAAAA,YAAY,CAACC,IAAD,EAAO;AACjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD;;AAEe,QAAVG,UAAU,GAAG;AACjB,SAAKN,QAAL,CAAc;AAAEJ,MAAAA,SAAS,EAAE;AAAb,KAAd;AACA,UAAMD,MAAM,GAAG,MAAMb,aAAa,EAAlC;AACA,SAAKkB,QAAL,CAAc;AAAEL,MAAAA,MAAF;AAAUC,MAAAA,SAAS,EAAE;AAArB,KAAd;AACD;;AAEDW,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,UAAL;AACAE,IAAAA,WAAW,CAAC,MAAM;AAChB,WAAKF,UAAL;AACD,KAFU,EAER,KAFQ,CAAX;AAGD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAwB,KAAKF,KAAnC;AAEA,wBACE;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,GAAlB;AAAA,oCACE,QAAC,QAAD;AACE,cAAA,UAAU,EAAGK,KAAD,IAAW;AACrB,qBAAKD,UAAL,CAAgBC,KAAhB;AACD,eAHH;AAIE,cAAA,SAAS,EAAE,KAAKL,KAAL,CAAWE;AAJxB;AAAA;AAAA;AAAA;AAAA,oBADF,EAQGA,SAAS,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBAAH,gBAAiB;AAAK,cAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,oBAR7B,eAUE,QAAC,UAAD;AAAY,cAAA,MAAM,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAA,oCACE,QAAC,OAAD;AAAS,cAAA,YAAY,EAAE,KAAKO;AAA5B;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGE,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AA9D+B;;AAiElC,eAAeJ,GAAf","sourcesContent":["import React from \"react\";\nimport NewTweet from \"./components/NewTweet\";\nimport TweetsList from \"./components/TweetsList\";\nimport { callTweetList } from \"./lib/api\";\nimport Loading from \"./components/Loading\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport Profile from \"./components/Profile\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [],\n      isLoading: false,\n      newName: \"\",\n    };\n  }\n\n  onNewTweet(tweet) {\n    this.setState((prevState) => {\n      return { tweets: [tweet, ...prevState.tweets] };\n    });\n  }\n\n  onChangeName(name) {\n    // this.setState({ newName: name });\n    console.log(name);\n  }\n\n  async loadTweets() {\n    this.setState({ isLoading: true });\n    const tweets = await callTweetList();\n    this.setState({ tweets, isLoading: false });\n  }\n\n  componentDidMount() {\n    this.loadTweets();\n    setInterval(() => {\n      this.loadTweets();\n    }, 10000);\n  }\n\n  render() {\n    const { tweets, isLoading } = this.state;\n\n    return (\n      <div>\n        <Router>\n          <NavBar></NavBar>\n          <Switch>\n            <Route exact path=\"/\">\n              <NewTweet\n                onNewTweet={(tweet) => {\n                  this.onNewTweet(tweet);\n                }}\n                isLoading={this.state.isLoading}\n              />\n\n              {isLoading ? <Loading /> : <div className=\"helper\"></div>}\n\n              <TweetsList tweets={tweets} />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile onChangeName={this.onChangeName} />\n              {console.log(this.state)}\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}