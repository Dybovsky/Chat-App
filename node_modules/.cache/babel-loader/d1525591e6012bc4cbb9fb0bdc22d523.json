{"ast":null,"code":"var _jsxFileName = \"/home/tom/Documents/ITC/01My_course/projects/react-project-2-Dybovsky/src/App.js\";\nimport React from \"react\";\nimport NewTweet from \"./components/NewTweet\";\nimport TweetsList from \"./components/TweetsList\";\nimport { callTweetList } from \"./lib/api\";\nimport Loading from \"./components/Loading\"; // import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// import NavBar from \"./components/NavBar\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [],\n      isLoading: false\n    };\n  }\n\n  onNewTweet(tweet) {\n    this.setState(prevState => {\n      return {\n        tweets: [tweet, ...prevState.tweets]\n      };\n    });\n  }\n\n  async loadTweets() {\n    this.setState({\n      isLoading: true\n    });\n    const tweets = await callTweetList();\n    this.setState({\n      tweets,\n      isLoading: false\n    });\n  }\n\n  componentDidMount() {\n    this.loadTweets();\n    setInterval(() => {\n      this.loadTweets();\n    }, 5000);\n  }\n\n  render() {\n    const {\n      tweets,\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/tom/Documents/ITC/01My_course/projects/react-project-2-Dybovsky/src/App.js"],"names":["React","NewTweet","TweetsList","callTweetList","Loading","App","Component","constructor","props","state","tweets","isLoading","onNewTweet","tweet","setState","prevState","loadTweets","componentDidMount","setInterval","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CACA;AACA;;;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID;;AAEDC,EAAAA,UAAU,CAACC,KAAD,EAAQ;AAChB,SAAKC,QAAL,CAAeC,SAAD,IAAe;AAC3B,aAAO;AAAEL,QAAAA,MAAM,EAAE,CAACG,KAAD,EAAQ,GAAGE,SAAS,CAACL,MAArB;AAAV,OAAP;AACD,KAFD;AAGD;;AAEe,QAAVM,UAAU,GAAG;AACjB,SAAKF,QAAL,CAAc;AAAEH,MAAAA,SAAS,EAAE;AAAb,KAAd;AACA,UAAMD,MAAM,GAAG,MAAMP,aAAa,EAAlC;AACA,SAAKW,QAAL,CAAc;AAAEJ,MAAAA,MAAF;AAAUC,MAAAA,SAAS,EAAE;AAArB,KAAd;AACD;;AAEDM,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,UAAL;AACAE,IAAAA,WAAW,CAAC,MAAM;AAChB,WAAKF,UAAL;AACD,KAFU,EAER,IAFQ,CAAX;AAGD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAwB,KAAKF,KAAnC;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA,YADF;AAwBD;;AAvD+B;;AA0DlC,eAAeJ,GAAf","sourcesContent":["import React from \"react\";\nimport NewTweet from \"./components/NewTweet\";\nimport TweetsList from \"./components/TweetsList\";\nimport { callTweetList } from \"./lib/api\";\nimport Loading from \"./components/Loading\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// import NavBar from \"./components/NavBar\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [],\n      isLoading: false,\n    };\n  }\n\n  onNewTweet(tweet) {\n    this.setState((prevState) => {\n      return { tweets: [tweet, ...prevState.tweets] };\n    });\n  }\n\n  async loadTweets() {\n    this.setState({ isLoading: true });\n    const tweets = await callTweetList();\n    this.setState({ tweets, isLoading: false });\n  }\n\n  componentDidMount() {\n    this.loadTweets();\n    setInterval(() => {\n      this.loadTweets();\n    }, 5000);\n  }\n\n  render() {\n    const { tweets, isLoading } = this.state;\n\n    return (\n      <div>\n        {/* <Router>\n          <NavBar></NavBar>\n          <Switch>\n            <Route exact path=\"/\">\n              <NewTweet\n                onNewTweet={(tweet) => {\n                  this.onNewTweet(tweet);\n                }}\n                isLoading={this.state.isLoading}\n              />\n\n              {isLoading && <Loading />}\n\n              <TweetsList tweets={tweets} />\n            </Route>\n            <Route path=\"/profile\">\n              <div>profile</div>\n            </Route>\n          </Switch>\n        </Router> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}