{"ast":null,"code":"var _jsxFileName = \"/home/tom/Documents/ITC/01My_course/projects/react-project-2-Dybovsky/src/App.js\";\nimport React from \"react\";\nimport NewTweet from \"./components/NewTweet\";\nimport TweetsList from \"./components/TweetsList\";\nimport { callTweetList } from \"./lib/api\";\nimport Loading from \"./components/Loading\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport Profile from \"./components/Profile\";\nimport TweetsContext from \"./components/TweetsContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeName = name => {\n      this.setState({\n        newName: name\n      });\n    };\n\n    this.state = {\n      tweets: [],\n      isLoading: false,\n      newName: \"\"\n    };\n  }\n\n  onNewTweet(tweet) {\n    this.setState(prevState => {\n      return {\n        tweets: [tweet, ...prevState.tweets]\n      };\n    });\n  }\n\n  async loadTweets() {\n    this.setState({\n      isLoading: true\n    });\n    const tweets = await callTweetList();\n    this.setState({\n      tweets,\n      isLoading: false\n    });\n  }\n\n  componentDidMount() {\n    this.loadTweets();\n    setInterval(() => {\n      this.loadTweets();\n    }, 10000);\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(TweetsContext.Provider, {\n      value: this.state,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              children: [/*#__PURE__*/_jsxDEV(NewTweet // newName={this.state.newName}\n              , {\n                onNewTweet: tweet => {\n                  this.onNewTweet(tweet);\n                },\n                isLoading: this.state.isLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 30\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"helper\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 44\n              }, this), /*#__PURE__*/_jsxDEV(TweetsList, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/profile\",\n              children: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/tom/Documents/ITC/01My_course/projects/react-project-2-Dybovsky/src/App.js"],"names":["React","NewTweet","TweetsList","callTweetList","Loading","BrowserRouter","Router","Switch","Route","NavBar","Profile","TweetsContext","App","Component","constructor","props","onChangeName","name","setState","newName","state","tweets","isLoading","onNewTweet","tweet","prevState","loadTweets","componentDidMount","setInterval","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;;AAEA,MAAMC,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,YAfmB,GAeHC,IAAD,IAAU;AACvB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAEF;AAAX,OAAd;AACD,KAjBkB;;AAEjB,SAAKG,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,SAAS,EAAE,KAFA;AAGXH,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKD;;AAEDI,EAAAA,UAAU,CAACC,KAAD,EAAQ;AAChB,SAAKN,QAAL,CAAeO,SAAD,IAAe;AAC3B,aAAO;AAAEJ,QAAAA,MAAM,EAAE,CAACG,KAAD,EAAQ,GAAGC,SAAS,CAACJ,MAArB;AAAV,OAAP;AACD,KAFD;AAGD;;AAMe,QAAVK,UAAU,GAAG;AACjB,SAAKR,QAAL,CAAc;AAAEI,MAAAA,SAAS,EAAE;AAAb,KAAd;AACA,UAAMD,MAAM,GAAG,MAAMlB,aAAa,EAAlC;AACA,SAAKe,QAAL,CAAc;AAAEG,MAAAA,MAAF;AAAUC,MAAAA,SAAS,EAAE;AAArB,KAAd;AACD;;AAEDK,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,UAAL;AACAE,IAAAA,WAAW,CAAC,MAAM;AAChB,WAAKF,UAAL;AACD,KAFU,EAER,KAFQ,CAAX;AAGD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA;AAAF,QAAgB,KAAKF,KAA3B;AAEA,wBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,MAAA,KAAK,EAAE,KAAKA,KAApC;AAAA,6BACE;AAAA,+BACE,QAAC,MAAD;AAAA,kCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AAAA,oCACE,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,IAAI,EAAC,GAAlB;AAAA,sCACE,QAAC,QAAD,CACE;AADF;AAEE,gBAAA,UAAU,EAAGI,KAAD,IAAW;AACrB,uBAAKD,UAAL,CAAgBC,KAAhB;AACD,iBAJH;AAKE,gBAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWE;AALxB;AAAA;AAAA;AAAA;AAAA,sBADF,EASGA,SAAS,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,sBAAH,gBAAiB;AAAK,gBAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,sBAT7B,eAWE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,sBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAcE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,UAAZ;AAAA,qCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA2BD;;AA/D+B;;AAkElC,eAAeV,GAAf","sourcesContent":["import React from \"react\";\nimport NewTweet from \"./components/NewTweet\";\nimport TweetsList from \"./components/TweetsList\";\nimport { callTweetList } from \"./lib/api\";\nimport Loading from \"./components/Loading\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport Profile from \"./components/Profile\";\nimport TweetsContext from \"./components/TweetsContext\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [],\n      isLoading: false,\n      newName: \"\",\n    };\n  }\n\n  onNewTweet(tweet) {\n    this.setState((prevState) => {\n      return { tweets: [tweet, ...prevState.tweets] };\n    });\n  }\n\n  onChangeName = (name) => {\n    this.setState({ newName: name });\n  };\n\n  async loadTweets() {\n    this.setState({ isLoading: true });\n    const tweets = await callTweetList();\n    this.setState({ tweets, isLoading: false });\n  }\n\n  componentDidMount() {\n    this.loadTweets();\n    setInterval(() => {\n      this.loadTweets();\n    }, 10000);\n  }\n\n  render() {\n    const { isLoading } = this.state;\n\n    return (\n      <TweetsContext.Provider value={this.state}>\n        <div>\n          <Router>\n            <NavBar></NavBar>\n            <Switch>\n              <Route exact path=\"/\">\n                <NewTweet\n                  // newName={this.state.newName}\n                  onNewTweet={(tweet) => {\n                    this.onNewTweet(tweet);\n                  }}\n                  isLoading={this.state.isLoading}\n                />\n\n                {isLoading ? <Loading /> : <div className=\"helper\"></div>}\n\n                <TweetsList />\n              </Route>\n              <Route path=\"/profile\">\n                <Profile />\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      </TweetsContext.Provider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}