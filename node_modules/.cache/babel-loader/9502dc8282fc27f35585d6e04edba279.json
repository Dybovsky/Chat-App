{"ast":null,"code":"var _jsxFileName = \"/home/tom/Documents/ITC/01My_course/projects/react-project-2-Dybovsky/src/App.js\";\nimport React from \"react\";\nimport NewTweet from \"./components/NewTweet\";\nimport TweetsList from \"./components/TweetsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: []\n    };\n  }\n\n  onNewTweet(tweet) {\n    this.setState(prevState => {\n      return {\n        tweets: [...prevState.tweets, tweet]\n      };\n    });\n    localStorage.setItem(\"myState\", JSON.stringify(this.state.tweets));\n  }\n\n  componentDidMount() {\n    this.loadTweets();\n  }\n\n  async loadTweets() {\n    const localTweets = await JSON.parse(localStorage.getItem(\"myState\"));\n\n    if (localTweets) {\n      this.setState({\n        tweets: localTweets\n      });\n    }\n  } // componentWillMount() {\n  //   localStorage.getItem(\"myState\") &&\n  //     this.setState({\n  //       tweets: JSON.parse(localStorage.getItem(\"myState\")),\n  //     });\n  // }\n  // componentDidMount() {\n  //   if (!localStorage.getItem(\"myState\")) {\n  //     const tweets = JSON.parse(localStorage.getItem(\"myState\"));\n  //     this.setState({ tweets });\n  //   }\n  // }\n  // componentWillUpdate(nextProps, nextState) {\n  //   localStorage.setItem(\"myState\", JSON.stringify(nextState.tweets));\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NewTweet, {\n        onNewTweet: tweet => {\n          this.onNewTweet(tweet);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TweetsList, {\n        tweets: this.state.tweets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/tom/Documents/ITC/01My_course/projects/react-project-2-Dybovsky/src/App.js"],"names":["React","NewTweet","TweetsList","App","Component","constructor","props","state","tweets","onNewTweet","tweet","setState","prevState","localStorage","setItem","JSON","stringify","componentDidMount","loadTweets","localTweets","parse","getItem","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAEDC,EAAAA,UAAU,CAACC,KAAD,EAAQ;AAChB,SAAKC,QAAL,CAAeC,SAAD,IAAe;AAC3B,aAAO;AAAEJ,QAAAA,MAAM,EAAE,CAAC,GAAGI,SAAS,CAACJ,MAAd,EAAsBE,KAAtB;AAAV,OAAP;AACD,KAFD;AAGAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAe,KAAKT,KAAL,CAAWC,MAA1B,CAAhC;AACD;;AAEDS,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,UAAL;AACD;;AAEe,QAAVA,UAAU,GAAG;AACjB,UAAMC,WAAW,GAAG,MAAMJ,IAAI,CAACK,KAAL,CAAWP,YAAY,CAACQ,OAAb,CAAqB,SAArB,CAAX,CAA1B;;AACA,QAAIF,WAAJ,EAAiB;AACf,WAAKR,QAAL,CAAc;AAAEH,QAAAA,MAAM,EAAEW;AAAV,OAAd;AACD;AACF,GAxB+B,CA0BhC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,QAAD;AACE,QAAA,UAAU,EAAGZ,KAAD,IAAW;AACrB,eAAKD,UAAL,CAAgBC,KAAhB;AACD;AAHH;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,UAAD;AAAY,QAAA,MAAM,EAAE,KAAKH,KAAL,CAAWC;AAA/B;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAtD+B;;AAyDlC,eAAeL,GAAf","sourcesContent":["import React from \"react\";\nimport NewTweet from \"./components/NewTweet\";\nimport TweetsList from \"./components/TweetsList\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [],\n    };\n  }\n\n  onNewTweet(tweet) {\n    this.setState((prevState) => {\n      return { tweets: [...prevState.tweets, tweet] };\n    });\n    localStorage.setItem(\"myState\", JSON.stringify(this.state.tweets));\n  }\n\n  componentDidMount() {\n    this.loadTweets();\n  }\n\n  async loadTweets() {\n    const localTweets = await JSON.parse(localStorage.getItem(\"myState\"));\n    if (localTweets) {\n      this.setState({ tweets: localTweets });\n    }\n  }\n\n  // componentWillMount() {\n  //   localStorage.getItem(\"myState\") &&\n  //     this.setState({\n  //       tweets: JSON.parse(localStorage.getItem(\"myState\")),\n  //     });\n  // }\n\n  // componentDidMount() {\n  //   if (!localStorage.getItem(\"myState\")) {\n  //     const tweets = JSON.parse(localStorage.getItem(\"myState\"));\n  //     this.setState({ tweets });\n  //   }\n  // }\n  // componentWillUpdate(nextProps, nextState) {\n  //   localStorage.setItem(\"myState\", JSON.stringify(nextState.tweets));\n  // }\n\n  render() {\n    return (\n      <div>\n        <NewTweet\n          onNewTweet={(tweet) => {\n            this.onNewTweet(tweet);\n          }}\n        />\n        <TweetsList tweets={this.state.tweets} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}