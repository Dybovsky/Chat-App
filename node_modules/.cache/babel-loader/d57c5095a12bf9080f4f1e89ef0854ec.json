{"ast":null,"code":"import axios from \"axios\";\nconst url = \"https://micro-blogging-dot-full-stack-course-services.ew.r.appspot.com\";\nexport async function callTweetList() {\n  const response = await axios.get(`${url}/tweet`);\n  return response.data.tweets; //this.setState(() => ({ tweets: data }));\n}\nexport async function postTweet(tweet) {\n  try {\n    const response = await axios.post(`${url}/tweet`);\n    return response;\n  } catch (e) {\n    const response = await axios.post(`${url}/tweet`);\n    const data = await response.text();\n    console.log(data); //alert(`not today: ${e.message}`);\n  }\n} // const response = await axios.post(`${url}/tweet`, tweet);\n// if (response.statusCode > 200) {\n//   throw new Error(response.message);\n// }\n// }\n//   if (response.statusCode > 200) {\n//     throw new Error(\"response.data.message\");\n//   }\n// }","map":{"version":3,"sources":["/home/tom/Documents/ITC/01My_course/projects/react-project-2-Dybovsky/src/lib/api.js"],"names":["axios","url","callTweetList","response","get","data","tweets","postTweet","tweet","post","e","text","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GACP,wEADF;AAGA,OAAO,eAAeC,aAAf,GAA+B;AACpC,QAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAW,GAAEH,GAAI,QAAjB,CAAvB;AACA,SAAOE,QAAQ,CAACE,IAAT,CAAcC,MAArB,CAFoC,CAGpC;AACD;AAED,OAAO,eAAeC,SAAf,CAAyBC,KAAzB,EAAgC;AACrC,MAAI;AACF,UAAML,QAAQ,GAAG,MAAMH,KAAK,CAACS,IAAN,CAAY,GAAER,GAAI,QAAlB,CAAvB;AACA,WAAOE,QAAP;AACD,GAHD,CAGE,OAAOO,CAAP,EAAU;AACV,UAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACS,IAAN,CAAY,GAAER,GAAI,QAAlB,CAAvB;AACA,UAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACQ,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ,EAHU,CAIV;AACD;AACF,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\n\nconst url =\n  \"https://micro-blogging-dot-full-stack-course-services.ew.r.appspot.com\";\n\nexport async function callTweetList() {\n  const response = await axios.get(`${url}/tweet`);\n  return response.data.tweets;\n  //this.setState(() => ({ tweets: data }));\n}\n\nexport async function postTweet(tweet) {\n  try {\n    const response = await axios.post(`${url}/tweet`);\n    return response;\n  } catch (e) {\n    const response = await axios.post(`${url}/tweet`);\n    const data = await response.text();\n    console.log(data);\n    //alert(`not today: ${e.message}`);\n  }\n}\n// const response = await axios.post(`${url}/tweet`, tweet);\n// if (response.statusCode > 200) {\n//   throw new Error(response.message);\n// }\n// }\n//   if (response.statusCode > 200) {\n//     throw new Error(\"response.data.message\");\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}