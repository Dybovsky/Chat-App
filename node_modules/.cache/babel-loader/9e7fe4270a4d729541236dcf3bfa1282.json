{"ast":null,"code":"var _jsxFileName = \"/home/tom/Documents/ITC/01My_course/projects/react-project-2-Dybovsky/src/App.js\";\nimport React from \"react\";\nimport NewTweet from \"./components/NewTweet\";\nimport TweetsList from \"./components/TweetsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: []\n    };\n  }\n\n  onNewTweet(tweet) {\n    this.setState(prevState => {\n      return {\n        tweets: [tweet, ...prevState.tweets]\n      };\n    });\n  }\n\n  componentWillMount() {\n    const tweets = JSON.parse(localStorage.getItem(\"myState\"));\n\n    if (localStorage.getItem(\"myState\")) {\n      this.setState({\n        tweets\n      });\n    } else {\n      this.setState({\n        tweets: []\n      });\n    }\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    localStorage.setItem(\"myState\", JSON.stringify(this.tweets));\n  }\n\n  render() {\n    const {\n      tweets\n    } = this.state;\n    console.log(tweets);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NewTweet, {\n        onNewTweet: tweet => {\n          this.onNewTweet(tweet);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TweetsList, {\n        tweets: tweets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/tom/Documents/ITC/01My_course/projects/react-project-2-Dybovsky/src/App.js"],"names":["React","NewTweet","TweetsList","App","Component","constructor","props","state","tweets","onNewTweet","tweet","setState","prevState","componentWillMount","JSON","parse","localStorage","getItem","componentWillUpdate","nextProps","nextState","setItem","stringify","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAEDC,EAAAA,UAAU,CAACC,KAAD,EAAQ;AAChB,SAAKC,QAAL,CAAeC,SAAD,IAAe;AAC3B,aAAO;AAAEJ,QAAAA,MAAM,EAAE,CAACE,KAAD,EAAQ,GAAGE,SAAS,CAACJ,MAArB;AAAV,OAAP;AACD,KAFD;AAGD;;AAEDK,EAAAA,kBAAkB,GAAG;AACnB,UAAML,MAAM,GAAGM,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAf;;AACA,QAAID,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAJ,EAAqC;AACnC,WAAKN,QAAL,CAAc;AAAEH,QAAAA;AAAF,OAAd;AACD,KAFD,MAEO;AACL,WAAKG,QAAL,CAAc;AAAEH,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD;AACF;;AACDU,EAAAA,mBAAmB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACxCJ,IAAAA,YAAY,CAACK,OAAb,CAAqB,SAArB,EAAgCP,IAAI,CAACQ,SAAL,CAAe,KAAKd,MAApB,CAAhC;AACD;;AAEDe,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA;AAAF,QAAa,KAAKD,KAAxB;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,MAAZ;AAEA,wBACE;AAAA,8BACE,QAAC,QAAD;AACE,QAAA,UAAU,EAAGE,KAAD,IAAW;AACrB,eAAKD,UAAL,CAAgBC,KAAhB;AACD;AAHH;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,UAAD;AAAY,QAAA,MAAM,EAAEF;AAApB;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAxC+B;;AA2ClC,eAAeL,GAAf","sourcesContent":["import React from \"react\";\nimport NewTweet from \"./components/NewTweet\";\nimport TweetsList from \"./components/TweetsList\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [],\n    };\n  }\n\n  onNewTweet(tweet) {\n    this.setState((prevState) => {\n      return { tweets: [tweet, ...prevState.tweets] };\n    });\n  }\n\n  componentWillMount() {\n    const tweets = JSON.parse(localStorage.getItem(\"myState\"));\n    if (localStorage.getItem(\"myState\")) {\n      this.setState({ tweets });\n    } else {\n      this.setState({ tweets: [] });\n    }\n  }\n  componentWillUpdate(nextProps, nextState) {\n    localStorage.setItem(\"myState\", JSON.stringify(this.tweets));\n  }\n\n  render() {\n    const { tweets } = this.state;\n    console.log(tweets);\n\n    return (\n      <div>\n        <NewTweet\n          onNewTweet={(tweet) => {\n            this.onNewTweet(tweet);\n          }}\n        />\n        <TweetsList tweets={tweets} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}