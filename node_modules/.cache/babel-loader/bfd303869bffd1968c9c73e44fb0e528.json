{"ast":null,"code":"var _jsxFileName = \"/home/tom/Documents/ITC/01My_course/projects/react-project-2-Dybovsky/src/App.js\";\nimport React from \"react\";\nimport NewTweet from \"./components/NewTweet\";\nimport TweetsList from \"./components/TweetsList\";\nimport { callTweetList } from \"./lib/api\";\nimport Loading from \"./components/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [],\n      isLoading: true\n    };\n  }\n\n  onNewTweet(tweet) {\n    this.setState(prevState => {\n      return {\n        tweets: [tweet, ...prevState.tweets]\n      };\n    });\n  }\n\n  async loadTweets() {\n    const tweets = await callTweetList();\n    this.setState({\n      tweets,\n      loading: false\n    });\n  }\n\n  componentDidMount() {\n    this.loadTweets();\n  }\n\n  render() {\n    const {\n      tweets,\n      isLoading\n    } = this.state; //console.log(tweets);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NewTweet, {\n        onNewTweet: tweet => {\n          this.onNewTweet(tweet);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(TweetsList, {\n        tweets: tweets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App; //  </div>\n//       {item.title && <h3>{item.title}</h3>}\n//       <div>","map":{"version":3,"sources":["/home/tom/Documents/ITC/01My_course/projects/react-project-2-Dybovsky/src/App.js"],"names":["React","NewTweet","TweetsList","callTweetList","Loading","App","Component","constructor","props","state","tweets","isLoading","onNewTweet","tweet","setState","prevState","loadTweets","loading","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID;;AAEDC,EAAAA,UAAU,CAACC,KAAD,EAAQ;AAChB,SAAKC,QAAL,CAAeC,SAAD,IAAe;AAC3B,aAAO;AAAEL,QAAAA,MAAM,EAAE,CAACG,KAAD,EAAQ,GAAGE,SAAS,CAACL,MAArB;AAAV,OAAP;AACD,KAFD;AAGD;;AAEe,QAAVM,UAAU,GAAG;AACjB,UAAMN,MAAM,GAAG,MAAMP,aAAa,EAAlC;AACA,SAAKW,QAAL,CAAc;AAAEJ,MAAAA,MAAF;AAAUO,MAAAA,OAAO,EAAE;AAAnB,KAAd;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,UAAL;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAwB,KAAKF,KAAnC,CADO,CAEP;;AAEA,wBACE;AAAA,8BACE,QAAC,QAAD;AACE,QAAA,UAAU,EAAGI,KAAD,IAAW;AACrB,eAAKD,UAAL,CAAgBC,KAAhB;AACD;AAHH;AAAA;AAAA;AAAA;AAAA,cADF,EAOGF,SAAS,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAPhB,eASE,QAAC,UAAD;AAAY,QAAA,MAAM,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAzC+B;;AA4ClC,eAAeL,GAAf,C,CACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport NewTweet from \"./components/NewTweet\";\nimport TweetsList from \"./components/TweetsList\";\nimport { callTweetList } from \"./lib/api\";\nimport Loading from \"./components/Loading\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [],\n      isLoading: true,\n    };\n  }\n\n  onNewTweet(tweet) {\n    this.setState((prevState) => {\n      return { tweets: [tweet, ...prevState.tweets] };\n    });\n  }\n\n  async loadTweets() {\n    const tweets = await callTweetList();\n    this.setState({ tweets, loading: false });\n  }\n\n  componentDidMount() {\n    this.loadTweets();\n  }\n\n  render() {\n    const { tweets, isLoading } = this.state;\n    //console.log(tweets);\n\n    return (\n      <div>\n        <NewTweet\n          onNewTweet={(tweet) => {\n            this.onNewTweet(tweet);\n          }}\n        />\n\n        {isLoading && <Loading />}\n\n        <TweetsList tweets={tweets} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n//  </div>\n//       {item.title && <h3>{item.title}</h3>}\n//       <div>\n"]},"metadata":{},"sourceType":"module"}