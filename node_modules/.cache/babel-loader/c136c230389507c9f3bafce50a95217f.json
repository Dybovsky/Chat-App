{"ast":null,"code":"var _jsxFileName = \"/home/tom/Documents/ITC/01My_course/projects/react-project-2-Dybovsky/src/App.js\";\nimport React from \"react\";\nimport NewTweet from \"./components/NewTweet\";\nimport TweetsList from \"./components/TweetsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: []\n    };\n  }\n\n  onNewTweet(newTweet) {\n    if (this.state.tweets) {\n      localStorage.setItem(\"myState\", JSON.stringify([...this.state.tweets, newTweet]));\n    }\n\n    this.setState(prevState => {\n      return {\n        tweets: [...prevState.tweets, newTweet]\n      };\n    });\n  } // componentWillUpdate() {\n  // }\n\n\n  componentDidMount() {\n    this.loadTweets();\n  }\n\n  async loadTweets() {\n    const localTweets = await JSON.parse(localStorage.getItem(\"myState\"));\n\n    if (localTweets) {\n      this.setState({\n        tweets: localTweets\n      });\n    }\n  } // componentWillMount() {\n  //   localStorage.getItem(\"myState\") &&\n  //     this.setState({\n  //       tweets: JSON.parse(localStorage.getItem(\"myState\")),\n  //     });\n  // }\n  // componentDidMount() {\n  //   if (!localStorage.getItem(\"myState\")) {\n  //     const tweets = JSON.parse(localStorage.getItem(\"myState\"));\n  //     this.setState({ tweets });\n  //   }\n  // }\n  // componentWillUpdate(nextProps, nextState) {\n  //   localStorage.setItem(\"myState\", JSON.stringify(nextState.tweets));\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NewTweet, {\n        onNewTweet: tweet => {\n          this.onNewTweet(tweet);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TweetsList, {\n        tweets: this.state.tweets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/tom/Documents/ITC/01My_course/projects/react-project-2-Dybovsky/src/App.js"],"names":["React","NewTweet","TweetsList","App","Component","constructor","props","state","tweets","onNewTweet","newTweet","localStorage","setItem","JSON","stringify","setState","prevState","componentDidMount","loadTweets","localTweets","parse","getItem","render","tweet"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AACDC,EAAAA,UAAU,CAACC,QAAD,EAAW;AACnB,QAAI,KAAKH,KAAL,CAAWC,MAAf,EAAuB;AACrBG,MAAAA,YAAY,CAACC,OAAb,CACE,SADF,EAEEC,IAAI,CAACC,SAAL,CAAe,CAAC,GAAG,KAAKP,KAAL,CAAWC,MAAf,EAAuBE,QAAvB,CAAf,CAFF;AAID;;AACD,SAAKK,QAAL,CAAeC,SAAD,IAAe;AAC3B,aAAO;AAAER,QAAAA,MAAM,EAAE,CAAC,GAAGQ,SAAS,CAACR,MAAd,EAAsBE,QAAtB;AAAV,OAAP;AACD,KAFD;AAGD,GAjB+B,CAmBhC;AACA;;;AAEAO,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,UAAL;AACD;;AAEe,QAAVA,UAAU,GAAG;AACjB,UAAMC,WAAW,GAAG,MAAMN,IAAI,CAACO,KAAL,CAAWT,YAAY,CAACU,OAAb,CAAqB,SAArB,CAAX,CAA1B;;AACA,QAAIF,WAAJ,EAAiB;AACf,WAAKJ,QAAL,CAAc;AAAEP,QAAAA,MAAM,EAAEW;AAAV,OAAd;AACD;AACF,GA/B+B,CAiChC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,QAAD;AACE,QAAA,UAAU,EAAGC,KAAD,IAAW;AACrB,eAAKd,UAAL,CAAgBc,KAAhB;AACD;AAHH;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,UAAD;AAAY,QAAA,MAAM,EAAE,KAAKhB,KAAL,CAAWC;AAA/B;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA7D+B;;AAgElC,eAAeL,GAAf","sourcesContent":["import React from \"react\";\nimport NewTweet from \"./components/NewTweet\";\nimport TweetsList from \"./components/TweetsList\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [],\n    };\n  }\n  onNewTweet(newTweet) {\n    if (this.state.tweets) {\n      localStorage.setItem(\n        \"myState\",\n        JSON.stringify([...this.state.tweets, newTweet])\n      );\n    }\n    this.setState((prevState) => {\n      return { tweets: [...prevState.tweets, newTweet] };\n    });\n  }\n\n  // componentWillUpdate() {\n  // }\n\n  componentDidMount() {\n    this.loadTweets();\n  }\n\n  async loadTweets() {\n    const localTweets = await JSON.parse(localStorage.getItem(\"myState\"));\n    if (localTweets) {\n      this.setState({ tweets: localTweets });\n    }\n  }\n\n  // componentWillMount() {\n  //   localStorage.getItem(\"myState\") &&\n  //     this.setState({\n  //       tweets: JSON.parse(localStorage.getItem(\"myState\")),\n  //     });\n  // }\n\n  // componentDidMount() {\n  //   if (!localStorage.getItem(\"myState\")) {\n  //     const tweets = JSON.parse(localStorage.getItem(\"myState\"));\n  //     this.setState({ tweets });\n  //   }\n  // }\n  // componentWillUpdate(nextProps, nextState) {\n  //   localStorage.setItem(\"myState\", JSON.stringify(nextState.tweets));\n  // }\n\n  render() {\n    return (\n      <div>\n        <NewTweet\n          onNewTweet={(tweet) => {\n            this.onNewTweet(tweet);\n          }}\n        />\n        <TweetsList tweets={this.state.tweets} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}