{"ast":null,"code":"var _jsxFileName = \"/home/tom/Documents/ITC/01My_course/projects/react-project-2-Dybovsky/src/App.js\";\nimport React from \"react\";\nimport NewTweet from \"./components/NewTweet\";\nimport TweetsList from \"./components/TweetsList\";\nimport { callTweetList } from \"./lib/api\";\nimport Loading from \"./components/Loading\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavBar = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/profile\",\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = NavBar;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [],\n      isLoading: false\n    };\n  }\n\n  onNewTweet(tweet) {\n    this.setState(prevState => {\n      return {\n        tweets: [tweet, ...prevState.tweets]\n      };\n    });\n  }\n\n  async loadTweets() {\n    this.setState({\n      isLoading: true\n    });\n    const tweets = await callTweetList();\n    this.setState({\n      tweets,\n      isLoading: false\n    });\n  }\n\n  componentDidMount() {\n    this.loadTweets();\n    setInterval(() => {\n      this.loadTweets();\n    }, 5000);\n  }\n\n  render() {\n    const {\n      tweets,\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: [/*#__PURE__*/_jsxDEV(NewTweet, {\n              onNewTweet: tweet => {\n                this.onNewTweet(tweet);\n              },\n              isLoading: this.state.isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TweetsList, {\n              tweets: tweets\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/profile\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App; //  </div>\n//       {item.title && <h3>{item.title}</h3>}\n//       <div>\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/home/tom/Documents/ITC/01My_course/projects/react-project-2-Dybovsky/src/App.js"],"names":["React","NewTweet","TweetsList","callTweetList","Loading","BrowserRouter","Router","Switch","Route","Link","NavBar","App","Component","constructor","props","state","tweets","isLoading","onNewTweet","tweet","setState","prevState","loadTweets","componentDidMount","setInterval","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,kBAA7D;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPD;;KAAMA,M;;AASN,MAAMC,GAAN,SAAkBX,KAAK,CAACY,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID;;AAEDC,EAAAA,UAAU,CAACC,KAAD,EAAQ;AAChB,SAAKC,QAAL,CAAeC,SAAD,IAAe;AAC3B,aAAO;AAAEL,QAAAA,MAAM,EAAE,CAACG,KAAD,EAAQ,GAAGE,SAAS,CAACL,MAArB;AAAV,OAAP;AACD,KAFD;AAGD;;AAEe,QAAVM,UAAU,GAAG;AACjB,SAAKF,QAAL,CAAc;AAAEH,MAAAA,SAAS,EAAE;AAAb,KAAd;AACA,UAAMD,MAAM,GAAG,MAAMb,aAAa,EAAlC;AACA,SAAKiB,QAAL,CAAc;AAAEJ,MAAAA,MAAF;AAAUC,MAAAA,SAAS,EAAE;AAArB,KAAd;AACD;;AAEDM,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,UAAL;AACAE,IAAAA,WAAW,CAAC,MAAM;AAChB,WAAKF,UAAL;AACD,KAFU,EAER,IAFQ,CAAX;AAGD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAwB,KAAKF,KAAnC;AAEA,wBACE;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,GAAlB;AAAA,oCACE,QAAC,QAAD;AACE,cAAA,UAAU,EAAGI,KAAD,IAAW;AACrB,qBAAKD,UAAL,CAAgBC,KAAhB;AACD,eAHH;AAIE,cAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWE;AAJxB;AAAA;AAAA;AAAA;AAAA,oBADF,EAQGA,SAAS,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBARhB,eAUE,QAAC,UAAD;AAAY,cAAA,MAAM,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAwBD;;AAvD+B;;AA0DlC,eAAeL,GAAf,C,CACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport NewTweet from \"./components/NewTweet\";\nimport TweetsList from \"./components/TweetsList\";\nimport { callTweetList } from \"./lib/api\";\nimport Loading from \"./components/Loading\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nconst NavBar = () => {\n  return (\n    <div>\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/profile\">Profile</Link>\n    </div>\n  );\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [],\n      isLoading: false,\n    };\n  }\n\n  onNewTweet(tweet) {\n    this.setState((prevState) => {\n      return { tweets: [tweet, ...prevState.tweets] };\n    });\n  }\n\n  async loadTweets() {\n    this.setState({ isLoading: true });\n    const tweets = await callTweetList();\n    this.setState({ tweets, isLoading: false });\n  }\n\n  componentDidMount() {\n    this.loadTweets();\n    setInterval(() => {\n      this.loadTweets();\n    }, 5000);\n  }\n\n  render() {\n    const { tweets, isLoading } = this.state;\n\n    return (\n      <div>\n        <Router>\n          <NavBar></NavBar>\n          <Switch>\n            <Route exact path=\"/\">\n              <NewTweet\n                onNewTweet={(tweet) => {\n                  this.onNewTweet(tweet);\n                }}\n                isLoading={this.state.isLoading}\n              />\n\n              {isLoading && <Loading />}\n\n              <TweetsList tweets={tweets} />\n            </Route>\n            <Route path=\"/profile\">\n              <div>profile</div>\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n//  </div>\n//       {item.title && <h3>{item.title}</h3>}\n//       <div>\n"]},"metadata":{},"sourceType":"module"}