{"ast":null,"code":"var _jsxFileName = \"/home/tom/Documents/ITC/01My_course/projects/react-project-2-Dybovsky/src/App.js\";\nimport React from \"react\";\nimport NewTweet from \"./components/NewTweet\";\nimport TweetsList from \"./components/TweetsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: []\n    };\n  }\n\n  onNewTweet(tweet) {\n    this.setState(prevState => {\n      return {\n        tweets: [tweet, ...prevState.tweets]\n      };\n    });\n  } // async componentWillMount() {\n  //   const tweets = await JSON.parse(localStorage.getItem(\"myState\"));\n  //   if (localStorage.length !== 0) {\n  //     this.setState({ tweets });\n  //   } else {\n  //     this.setState({ tweets: [] });\n  //   }\n  // }\n  // componentWillUpdate(nextProps, nextState) {\n  //   localStorage.setItem(\"myState\", JSON.stringify(nextState.tweets));\n  // }\n\n\n  componentDidMount() {\n    const json = localStorage.getItem(\"tweets\");\n    const tweets = JSON.parse(json);\n\n    if (tweets) {\n      this.setState(() => ({\n        tweets\n      }));\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.tweets.length !== this.state.tweets.length) {\n      const json = JSON.stringify(this.state.tweets);\n      localStorage.setItem(\"tweets\", json);\n    }\n  }\n\n  render() {\n    const {\n      tweets\n    } = this.state; //console.log(tweets);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NewTweet, {\n        onNewTweet: tweet => {\n          this.onNewTweet(tweet);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TweetsList, {\n        tweets: tweets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/tom/Documents/ITC/01My_course/projects/react-project-2-Dybovsky/src/App.js"],"names":["React","NewTweet","TweetsList","App","Component","constructor","props","state","tweets","onNewTweet","tweet","setState","prevState","componentDidMount","json","localStorage","getItem","JSON","parse","componentDidUpdate","prevProps","length","stringify","setItem","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAEDC,EAAAA,UAAU,CAACC,KAAD,EAAQ;AAChB,SAAKC,QAAL,CAAeC,SAAD,IAAe;AAC3B,aAAO;AAAEJ,QAAAA,MAAM,EAAE,CAACE,KAAD,EAAQ,GAAGE,SAAS,CAACJ,MAArB;AAAV,OAAP;AACD,KAFD;AAGD,GAZ+B,CAchC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAK,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAb;AACA,UAAMR,MAAM,GAAGS,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAf;;AACA,QAAIN,MAAJ,EAAY;AACV,WAAKG,QAAL,CAAc,OAAO;AAAEH,QAAAA;AAAF,OAAP,CAAd;AACD;AACF;;AACDW,EAAAA,kBAAkB,CAACC,SAAD,EAAYR,SAAZ,EAAuB;AACvC,QAAIA,SAAS,CAACJ,MAAV,CAAiBa,MAAjB,KAA4B,KAAKd,KAAL,CAAWC,MAAX,CAAkBa,MAAlD,EAA0D;AACxD,YAAMP,IAAI,GAAGG,IAAI,CAACK,SAAL,CAAe,KAAKf,KAAL,CAAWC,MAA1B,CAAb;AACAO,MAAAA,YAAY,CAACQ,OAAb,CAAqB,QAArB,EAA+BT,IAA/B;AACD;AACF;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhB,MAAAA;AAAF,QAAa,KAAKD,KAAxB,CADO,CAEP;;AAEA,wBACE;AAAA,8BACE,QAAC,QAAD;AACE,QAAA,UAAU,EAAGG,KAAD,IAAW;AACrB,eAAKD,UAAL,CAAgBC,KAAhB;AACD;AAHH;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,UAAD;AAAY,QAAA,MAAM,EAAEF;AAApB;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAtD+B;;AAyDlC,eAAeL,GAAf","sourcesContent":["import React from \"react\";\nimport NewTweet from \"./components/NewTweet\";\nimport TweetsList from \"./components/TweetsList\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [],\n    };\n  }\n\n  onNewTweet(tweet) {\n    this.setState((prevState) => {\n      return { tweets: [tweet, ...prevState.tweets] };\n    });\n  }\n\n  // async componentWillMount() {\n  //   const tweets = await JSON.parse(localStorage.getItem(\"myState\"));\n  //   if (localStorage.length !== 0) {\n  //     this.setState({ tweets });\n  //   } else {\n  //     this.setState({ tweets: [] });\n  //   }\n  // }\n  // componentWillUpdate(nextProps, nextState) {\n  //   localStorage.setItem(\"myState\", JSON.stringify(nextState.tweets));\n  // }\n\n  componentDidMount() {\n    const json = localStorage.getItem(\"tweets\");\n    const tweets = JSON.parse(json);\n    if (tweets) {\n      this.setState(() => ({ tweets }));\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.tweets.length !== this.state.tweets.length) {\n      const json = JSON.stringify(this.state.tweets);\n      localStorage.setItem(\"tweets\", json);\n    }\n  }\n\n  render() {\n    const { tweets } = this.state;\n    //console.log(tweets);\n\n    return (\n      <div>\n        <NewTweet\n          onNewTweet={(tweet) => {\n            this.onNewTweet(tweet);\n          }}\n        />\n        <TweetsList tweets={tweets} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}